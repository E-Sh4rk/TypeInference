----- EXAMPLES -----

Why using an extended environment that map expressions (not only variable) is useful?

f: Any->Any
if f 3 is Int then f 3 else ...

-----

Why should we repeat refinement until fixpoint?

x: Any
y: Any
if (x,(x,y)) is (Int,(Int,Int)|(Bool,Bool)) then y else ...

-----

Why should we redo all previous tests?

if (x,y) is (Int,Int)|(Bool,Bool)
then
	if x is Int then y else ...
else ...

-----

Why are type schemes necessary?

id: Any->Any
if id 0 is Int then f else ...

After reduction:
if 0 is Int then f else ...

-----

Why we cannot handle ite inside tests just by recusrsively passing former tests environment? (complicated example)

if ((x,y), (if x is Int then y else 0)) is ((Int,Int)|(Bool,Bool), Int|Bool)
then (if x is Int then y else 0) else ...

